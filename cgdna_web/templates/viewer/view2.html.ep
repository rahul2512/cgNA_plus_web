% title 'cgdna view1';
% layout 'default';

<script>
function cgDNAweb () {
    this.model = undefined;
    this.view = undefined;
    this.controller = undefined;
    this.charts = undefined;

    var that = this;

    //wait until some button has been pressed to load all of the JS
    document.addEventListener('DOMContentLoaded', function () {
        for (var id = 1; id < 5; id++)
            $("#loading".concat(id.toString())).hide();


        function load_JS () {
            that.init();
        }

        document.getElementById("submit_seq1").addEventListener('click', function handle(event) {
            console.log('initialising cgDNAweb');
            //if it has been pressed, the listener isn't needed anymore
        
            var ctnt1 = document.getElementById("3dview_content");
        
            var canvas = document.getElementById('viewer');
            canvas.width = ctnt1.clientWidth;
            canvas.height = ctnt1.clientHeight;
            event.currentTarget.removeEventListener(event.type, handle);
            that.init();

            that.controller.onSubmit(event, 1);
        }, false);

        document.getElementById("seq_input1").addEventListener('keyup', function (event) {
            if (event.keyCode === 13) {
                document.getElementById("submit_seq1").dispatchEvent(new Event('click'));
                event.currentTarget.removeEventListener(event.type, handle);
            }
        }, false);

        var seq_input1 = document.getElementById("seq_input1");
        var seq_input2 = document.getElementById("seq_input2");
        var seq_input3 = document.getElementById("seq_input3");
        var seq_input4 = document.getElementById("seq_input4");
        var remove_seq_button1 = document.getElementById("remove_seq_button1");
        var remove_seq_button2 = document.getElementById("remove_seq_button2");
        var remove_seq_button3 = document.getElementById("remove_seq_button3");
        var remove_seq_button4 = document.getElementById("remove_seq_button4");

        remove_seq_button1.addEventListener('click', function (event) {
            //remove from model:
            if (that.model)
                that.model.removeConfiguration(1);
            //remove from view:
            if (that.view)
                that.view.removeRenderObject(1);
            //remove from plots:
            if (that.charts)
                that.charts.removeData(1);
            seq_input1.value = "";
            remove_seq_button1.style.opacity = 0;
        }, false);

        remove_seq_button2.addEventListener('click', function (event) {
            //remove from model:
            if (that.model)
            that.model.removeConfiguration(2);
            //remove from view:
            if (that.view)
                that.view.removeRenderObject(2);
            //remove from plots:
            if (that.charts)
                that.charts.removeData(2);
            seq_input2.value = "";
            remove_seq_button2.style.opacity = 0;
        }, false);

        remove_seq_button3.addEventListener('click', function (event) {
            //remove from model:
            if (that.model)
            that.model.removeConfiguration(3);
            //remove from view:
            if (that.view)
                that.view.removeRenderObject(3);
            //remove from plots:
            if (that.charts)
                that.charts.removeData(3);
            seq_input3.value = "";
            remove_seq_button3.style.opacity = 0;
        }, false);

        remove_seq_button4.addEventListener('click', function (event) {
            //remove from model:
            if (that.model)
            that.model.removeConfiguration(4);
            //remove from view:
            if (that.view)
                that.view.removeRenderObject(4);
            //remove from plots:
            if (that.charts)
                that.charts.removeData(4);
            seq_input4.value = "";
            remove_seq_button4.style.opacity = 0;
        }, false);
        seq_input1.addEventListener('input', function (event) {
            event.preventDefault();
            var search_wrapper = document.querySelector("#slide1 > .search_wrapper");
            if (search_wrapper.style.borderTopColor !== "rgb(112,178,233)") {
                search_wrapper.style.borderWidth = "3px";
                search_wrapper.style.borderTopColor = "rgb(112,178,233)";
                search_wrapper.style.borderRightColor = "rgb(112,178,233)";
                search_wrapper.style.borderBottomColor = "rgb(112,178,233)";
                search_wrapper.style.borderLeftColor = "rgb(112,178,233)";
            }

            if (seq_input1.value !== "") {
                remove_seq_button1.style.opacity = 1;
            } else {
                remove_seq_button1.style.opacity = 0;
            }
        }, false);
        seq_input2.addEventListener('input', function (event) {
            event.preventDefault();
            var search_wrapper = document.querySelector("#slide2 > .search_wrapper");
            if (search_wrapper.style.borderTopColor !== "rgb(112,178,233)") {
                search_wrapper.style.borderWidth = "3px";
                search_wrapper.style.borderTopColor = "rgb(112,178,233)";
                search_wrapper.style.borderRightColor = "rgb(112,178,233)";
                search_wrapper.style.borderBottomColor = "rgb(112,178,233)";
                search_wrapper.style.borderLeftColor = "rgb(112,178,233)";
            }

            if (seq_input2.value !== "") {
                remove_seq_button2.style.opacity = 1;
            } else {
                remove_seq_button2.style.opacity = 0;
            }
        }, false);
        seq_input3.addEventListener('input', function (event) {
            event.preventDefault();
            var search_wrapper = document.querySelector("#slide3 > .search_wrapper");
            if (search_wrapper.style.borderTopColor !== "rgb(112,178,233)") {
                search_wrapper.style.borderWidth = "3px";
                search_wrapper.style.borderTopColor = "rgb(112,178,233)";
                search_wrapper.style.borderRightColor = "rgb(112,178,233)";
                search_wrapper.style.borderBottomColor = "rgb(112,178,233)";
                search_wrapper.style.borderLeftColor = "rgb(112,178,233)";
            }

            if (seq_input3.value !== "") {
                remove_seq_button3.style.opacity = 1;
            } else {
                remove_seq_button3.style.opacity = 0;
            }
        }, false);
        seq_input4.addEventListener('input', function (event) {
            var search_wrapper = document.querySelector("#slide4 > .search_wrapper");
            if (search_wrapper.style.borderTopColor !== "rgb(112,178,233)") {
                search_wrapper.style.borderWidth = "3px";
                search_wrapper.style.borderTopColor = "rgb(112,178,233)";
                search_wrapper.style.borderRightColor = "rgb(112,178,233)";
                search_wrapper.style.borderBottomColor = "rgb(112,178,233)";
                search_wrapper.style.borderLeftColor = "rgb(112,178,233)";
            }

            event.preventDefault();
            if (seq_input4.value !== "") {
                remove_seq_button4.style.opacity = 1;
            } else {
                remove_seq_button4.style.opacity = 0;
            }
        }, false);
        
        
    });
}

cgDNAweb.prototype = {
    init : function () {
        this.model = new dnaModel();
        this.view = new dnaView(this.model, "viewer");
        this.charts = new dnaCharts();
        this.controller = new dnaController(this.model, this.view, this.charts);

        this.view.init();
        this.controller.init();
        this.controller.initControls();
        this.charts.init();
    }
};

dnaController.prototype.onSubmit = function (event, id) {
        //event.preventDefault();
        var seq = document.getElementById("seq_input".concat(id.toString())).value;
        var param_query = "#slide".concat(id.toString())+" .search_wrapper .params_dd_label";
        //console.log(param_query);
        var param = window.getComputedStyle(document.querySelector("#slide".concat(id.toString())+" .search_wrapper .params_dd_label"), ':before').content;
        
        //console.log(param);
        //console.log(seq);
        //console.log("id:", "loading"+id.toString());
          
        var that = this;
        $( "#loading"+id.toString() ).show();
        $.ajax({
           'async': true,
           'type': "POST",
           'global': false,
           'dataType': 'JSON',
           'url': "/data4",
           'data': { 'seq_input': seq,
                     'param_input': param},
           'success': function (data) {
                if( data.error === 'none' ) {
                    that.model.loadConfigurationFromJSON(data, id);
                    that.view.buildRenderObject(that.model.dna_molecules[id], id);
                    that.charts.addData(id, data.sequence, data.shapes);
                } else {
                    var search_wrapper = document.querySelector("#slide".concat(id.toString())+" > .search_wrapper");
                    search_wrapper.style.borderWidth = "3px";
                    search_wrapper.style.borderTopColor = "rgb(255,0,0)";
                    search_wrapper.style.borderRightColor = "rgb(255,0,0)";
                    search_wrapper.style.borderBottomColor = "rgb(255,0,0)";
                    search_wrapper.style.borderLeftColor = "rgb(255,0,0)";
                }
               $("#loading".concat(id.toString())).hide();
           },
           'error': function (response) {
               $("#loading".concat(id.toString())).hide();
           }
        });

        return false;
};

var program = new cgDNAweb();

//document.addEventListener('DOMContentLoaded', function () {
    /*
document.getElementById("submit_seq1").addEventListener('click', function (event) {
    console.log('initialising cgDNAweb');
    program.init();

    var ctnt1 = document.getElementById("3dview_content");
    var ctnt2 = document.getElementById("plots_content");

    var canvas = document.getElementById('viewer');
    canvas.width = Math.max(ctnt1.clientWidth, ctnt2.clientWidth);
    canvas.height = Math.max(ctnt1.clientHeight, ctnt2.clientHeight);
}, false);
*/

/*
window.onload = function () {
    //program.init();

    $("#loading1").hide();
    $("#loading2").hide();
    $("#loading3").hide();
    $("#loading4").hide();
}
*/

</script>
    <input type="checkbox" id="slide_header">

    <input type="radio" id="radio_3dview" name="tab" class="input" checked="checked">
    <input type="radio" id="radio_plots" name="tab" class="input">
    <input type="radio" id="radio_contact" name="tab" class="input">
    <input type="radio" id="radio_about" name="tab" class="input">
    
    
    <header id="header">
        <div class="top_wrapper">
            <!-- <label id="getting_started_button" for="radio_about"><span>Get started</span></label> -->
            <div class="title_wrapper">
                <h1 class="noselect"> cgDNAweb </h1>
                <h2 class="noselect"> A web-based viewer for the cgDNA model</h2>
                <a href="https://epfl.ch/">
                    <img src="EPFL-Logo-CMJN.svg" alt="EPFL logo">
                </a>
                <a href="http://lcvmwww.epfl.ch/">
                    <img src="LCVMMlogo_nobackground.svg" alt="LCVMM logo">
                </a>
                <a href="http://lcvmwww.epfl.ch/research/cgDNA/">
                    <img id="cgDNAlogo" src="cgDNA_logo_small.svg" alt="cgDNA logo">
                </a>
            </div>

            <div class="input_wrapper"> 
                <div id="slide_wrapper">

                    <input type="radio" name="controls" id="input1_radio" checked="checked">
                    <input type="radio" name="controls" id="input2_radio">
                    <input type="radio" name="controls" id="input3_radio">
                    <input type="radio" name="controls" id="input4_radio">

                    <div id="input_slider"> 
                        <div class="slide" id="slide1"> 
                            <div class="search_wrapper">
                                <div class="input_info_wrapper">
                                    <i class="fa fa-info fa-3x fa-fw" aria-hidden="true"></i>
                                    <!-- INFO in front of inputs -->
                                    <ul class="input-info-popup arrow_box">
                                        <li> input format: </li>
                                        <li> e.g. (AG)_100 </li>
                                        <li> paramset (PS) 4 is current state-of-the-art </li>
                                    </ul>
                                </div>

                                <input type="text" class="field" id="seq_input1" spellcheck="false" contenteditable="true" placeholder="Type Sequence...">

                                <div id="remove_seq_button1" class="remove_seq_button"></div>

                                <div class="params_dropdown_wrapper">
                                    <input type="radio" id="input1_radio_ps1" name="paramset"/>
                                    <input type="radio" id="input1_radio_ps2" name="paramset"/>
                                    <input type="radio" id="input1_radio_ps3" name="paramset"/>
                                    <input type="radio" id="input1_radio_ps4" name="paramset"/>
            
                                    <span class="params_dd_label"></span>
                                    <ul class="params_dropdown noselect">
                                        <li> <label for="input1_radio_ps1">Paramset 1</label> </li>
                                        <li> <label for="input1_radio_ps2">Paramset 2</label> </li>
                                        <li> <label for="input1_radio_ps3">Paramset 3</label> </li>
                                        <li> <label for="input1_radio_ps4">Paramset 4<br>(recommended)</label> </li>
                                    </ul>
                                </div>
                                <button type="submit" id="submit_seq1">Go <i id="loading1" class="fa fa-circle-o-notch fa-spin" aria-hidden="true"></i></button>
                            </div>
                        </div> <!-- /slide1 -->

                        <div class="slide" id="slide2"> 
                            <div class="search_wrapper">
                                <input type="text" class="field" id="seq_input2" spellcheck="false" contenteditable="true" placeholder="Type Sequence...">
                                
                                <div id="remove_seq_button2" class="remove_seq_button"></div>
                                
                                <div class="params_dropdown_wrapper">
                                    <input type="radio" id="input2_radio_ps1" name="paramset"/>
                                    <input type="radio" id="input2_radio_ps2" name="paramset"/>
                                    <input type="radio" id="input2_radio_ps3" name="paramset"/>
                                    <input type="radio" id="input2_radio_ps4" name="paramset"/>
            
                                    <span class="params_dd_label"></span>
                                    <!--<ul class="params_dropdown noselect"> -->
                                    <ul class="params_dropdown noselect">
                                        <li> <label for="input2_radio_ps1">Paramset 1</label> </li>
                                        <li> <label for="input2_radio_ps2">Paramset 2</label> </li>
                                        <li> <label for="input2_radio_ps3">Paramset 3</label> </li>
                                        <li> <label for="input2_radio_ps4">Paramset 4<br>(recommended)</label> </li>
                                    </ul>
                                </div>
                                <button type="submit" id="submit_seq2">Go <i id="loading2" class="fa fa-circle-o-notch fa-spin" aria-hidden="true"></i></button>
                            </div>
                        </div> <!-- /slide2 -->

                        <div class="slide" id="slide3"> 
                            <div class="search_wrapper">
                                <input type="text" class="field" id="seq_input3" spellcheck="false" contenteditable="true" placeholder="Type Sequence...">
                                
                                <div id="remove_seq_button3" class="remove_seq_button"></div>
                                
                                <div class="params_dropdown_wrapper">
                                    <input type="radio" id="input3_radio_ps1" name="paramset"/>
                                    <input type="radio" id="input3_radio_ps2" name="paramset"/>
                                    <input type="radio" id="input3_radio_ps3" name="paramset"/>
                                    <input type="radio" id="input3_radio_ps4" name="paramset"/>
            
                                    <span class="params_dd_label"></span>
                                    <ul class="params_dropdown noselect">
                                        <li> <label for="input3_radio_ps1">Paramset 1</label> </li>
                                        <li> <label for="input3_radio_ps2">Paramset 2</label> </li>
                                        <li> <label for="input3_radio_ps3">Paramset 3</label> </li>
                                        <li> <label for="input3_radio_ps4">Paramset 4<br>(recommended)</label> </li>
                                    </ul>
                                </div>
                                <button type="submit" id="submit_seq3">Go <i id="loading3" class="fa fa-circle-o-notch fa-spin" aria-hidden="true"></i></button>
                            </div>
                        </div> <!-- /slide3 -->


                        <div class="slide" id="slide4"> 
                            <div class="search_wrapper">
                                <input type="text" class="field" id="seq_input4" spellcheck="false" contenteditable="true" placeholder="Type Sequence...">
                                
                                <div id="remove_seq_button4" class="remove_seq_button"></div>
                                
                                <div class="params_dropdown_wrapper">
                                    <input type="radio" id="input4_radio_ps1" name="paramset"/>
                                    <input type="radio" id="input4_radio_ps2" name="paramset"/>
                                    <input type="radio" id="input4_radio_ps3" name="paramset"/>
                                    <input type="radio" id="input4_radio_ps4" name="paramset"/>
            
                                    <span class="params_dd_label"></span>
                                    <ul class="params_dropdown noselect">
                                        <li> <label for="input4_radio_ps1">Paramset 1</label> </li>
                                        <li> <label for="input4_radio_ps2">Paramset 2</label> </li>
                                        <li> <label for="input4_radio_ps3">Paramset 3</label> </li>
                                        <li> <label for="input4_radio_ps4">Paramset 4<br>(recommended)</label> </li>
                                    </ul>
                                </div>
                                <button type="submit" id="submit_seq4">Go <i id="loading4" class="fa fa-circle-o-notch fa-spin" aria-hidden="true"></i></button>
                            </div>
                        </div> <!-- /slide4 -->

                    </div>

                    <div id="slide_controls">
                        <label for="input1_radio"></label>
                        <label for="input2_radio"></label>
                        <label for="input3_radio"></label>
                        <label for="input4_radio"></label>
                    </div>
                    

                    <div class="active_slide noselect"> 
                        <div class="active_slide_positioning noselect">
                            <label for="input1_radio"></label>
                            <label for="input2_radio"></label>
                            <label for="input3_radio"></label>
                            <label for="input4_radio"></label>
                        </div>
                    </div>



                </div>
            </div>
        </div>

<!-- NAVBAR -->
        <div class="nav noselect">
            <label for="radio_3dview" class="label" id="label_3dview">
            <span> </span>
            </label>
            <div class="dropdown" id="label_settings">
                <span> </span>
                <ul>
                    <li>
                        Background<br>
                            <input type="radio" name="bgcolour" id="bg_white" value="white" checked> <label for="bg_white">White</label><br>
                            <input type="radio" name="bgcolour" id="bg_black" value="black"> <label for="bg_black">Black</label><br>
                    </li>
                    <li>
                        Show<br>
                            <input type="checkbox" name="basetype" id="type_base" value="base" checked> <label for="type_base">base boxes</label><br>
                            <input type="checkbox" name="basetype" id="type_basepair" value="basepair"> <label for="type_basepair">basepair boxes</label><br>
                            <input type="checkbox" name="basetype" id="type_atoms" value="atoms"> <label for="type_atoms">atoms</label><br>
                            <input id="check_backbone" type="checkbox" checked> <label for="check_backbone">backbones</label><br>

                            <input id="check_baseframes" type="checkbox"> <label for="check_baseframes">base frames</label><br>
                            <input id="check_basepairframes" type="checkbox"> <label for="check_basepairframes">basepair frames</label><br>
                            <!--<input id="check_phosphateframes" type="checkbox"> <label for="check_phosphateframes">phosphate frames</label><br> -->
                            <input id="check_grid" type="checkbox" checked> <label for="check_grid">Grid</label><br>
                    </li>
                    <li>
                            <button type="submit" id="submit_viewer_settings">Refresh</button>
                    </li>
                </ul>
            </div>
            <label for="radio_plots" class="label" id="label_plots">
                <span> </span>
            </label>
            <label for="radio_about" class="label" id="label_about">
                <span> </span>
            </label>
            <label for="radio_contact" class="label" id="label_contact">
                <span> </span>
            </label>
            <div class="dropdown" id="label_exports">
                <span> </span>
                <ul>
                    <li id="download_coords_pdb">Atom coords as .pdb</li>
                    <li id="download_coords_fra">Frames as .fra</li>
                    <li id="download_coords_bp_fra">BP frames as .fra</li>
                    <li id="download_charts_svg">2D plots as .svg</li>
                    <li id="download_charts_txt">Shapes as .txt</li>
                    <li id="download_stiff_csc">Stiffness matrix as .csc/.json</li>
                </ul>
            </div>
            <label for="slide_header" id="slide_label"></label>
        </div>
    </header>

<!--VIEWER -->
    <div class="canvas_content" id="3dview_content">
        <div id="canvas_div">
            <canvas id="viewer"></canvas>
        </div>
        <!--stuff to be seen before loading javascript-->
        <div id="start_instructions">
            <p> Enter a sequence in text box above. Example: </p>
            <!--<p>Parameter set 4 is the state of the art, we recommend not to change it unless .... </p>-->
            <p class="sequence"> <b>(</b>ACTG<b>_5</b>A<span class="ua" id="instr_seq_paren"><b>)_2</b></span> <b>[</b><span class="da" id = "instr_seq_brackets">C</span><b>]</b> A G<span class="ua" id="instr_seq_repeat"><b>_10</b></span> T </p>
            <label id="getting_started_button" for="radio_about"><span>Get started</span></label>
        </div>
    </div>

<!--PLOTS -->
    <div class="content" id="plots_content">

        <div class="plot-content">
            <h1 class="page-title">Internal Coordinates</h1>
            <!--<h2 class="page-subtitle">Rotations data format</h2>-->
            <h3> Rotation plots units </h3>
            <input type="radio" name="chart_coords" id="coords_c+" value="degrees" checked> <label for="coords_c+">In degrees</label><br>
            <input type="radio" name="chart_coords" id="coords_cg" value="internal"> <label for="coords_cg">In cgDNA internal coordinates</label><br>
            <br>
            <button type="submit" id="submit_plots_settings">Refresh</button>

            <div id="chart_table_inters">
                <h2 class="page-subtitle">Inters</h2>
                <br>
                <div id="tilt"  class="chart"></div>
                <div id="roll"  class="chart"></div>
                <div id="twist" class="chart"></div>
                <br>
                <div id="shift" class="chart"></div>
                <div id="slide" class="chart"></div>
                <div id="rise"  class="chart"></div>
                <br>
            </div>
            <div id="chart_table_intras">
                <h2 class="page-subtitle">Intras</h2>
                <br>
                <div id="buckle"    class="chart"></div>
                <div id="propeller" class="chart"></div>
                <div id="opening"   class="chart"></div>

                <br>
                <div id="shear"   class="chart"></div>
                <div id="stretch" class="chart"></div>
                <div id="stagger" class="chart"></div>
                <br>
            </div>
        </div>
    </div>

    <div class="content" id="contact_content">
        <div class="text-content">
            <h1 class="page-title">Contact</h1>
            <p>Prof. John H. Maddocks<br>
            MATH-FSB-EPFL, Station 8<br>
            Swiss Federal Institude of Technology<br>
            CH-1015 Lausanne<br>
            @: john (dot) maddocks (at) epfl (dot) ch<br>
            <br><br>

            <h1 class="page-title">Credits</h1>
		<p>Code by L. de Bruin  (debruin (at) lorentz (dot) leidenuniv (dot) nl), original concept by J. H. Maddocks, site designed and developed jointly. Thanks also to other members of the LCVMM, particularly A. Patelli and T. Zwahlen, and Masters students at the EPFL for testing and debugging the site.

		<p>Development of the web site was financially supported by the EPFL and the Swiss National Science Foundation under Award 200020 143613/1.
		<p>If you use the cgDNAweb site and found it helpful, please cite:
		    <p> <b>cgDNAweb: a web interface to the cgDNA sequence-dependent coarse-grain model of double-stranded DNA.</b><br>
			L. De Bruin, J.H. Maddocks <br>
			Nucleic Acids Research 46, issue W1 (2018), p. W5-W10<br>
			DOI:<a href="https://doi.org/10.1093/nar/gky351">10.1093/nar/gky351</a><br>
			</p>

		<p>The cgDNA model has its own <a href="http://lcvmwww.epfl.ch/research/cgDNA/">web page</a>, which includes a much more detailed description of the mathematical model underlying the cgDNAweb page, and has appropriate citation information for use of the cgDNA model itself.
        </div>
    </div>

    <div class="content" id="about_content">
        <div class="text-content">
            <h1 class="page-title">Getting started</h1>

	    <p> cgDNAweb is an interface to allow interactive visualisation of the sequence-dependent ground state, or free energy minimizing, configuration of a DNA double helical fragment as predicted by the cgDNA model.</p>

            <h2 class="page-subtitle">The cgDNA model</h2>
            <p>cgDNA is a sequence-dependent, coarse-grain, rigid-base model for double stranded DNA. For a full description of the model see the <a href="http://lcvmwww.epfl.ch/research/cgDNA/">cgDNA website</a> and the publications described there. Briefly, given an input sequence in the standard alphabet A,T,C,G, (along the reading, or Watson, strand in the 5'-3' direction) with one of the provided parameter sets (recommended default is PS4), the cgDNA model predicts a Gaussian (or multi-variate normal) probability density function (or PDF) for the dsDNA configuration expressed in
            standard internal dsDNA coordinates (more specifically a version of <a href="https://bisi.ibcp.fr/tools/curves_plus/index.html">Curves+</a> helicoidal coordinates).</p>

            <p>The cgDNAweb interface is primarily aimed at visualising the sequence-dependent minimum free energy, or ground state, configuration in the Gaussian that is predicted by the cgDNA model. The ground state can be visualised either in the 2D Plots pane, as graphs of the internal coordinates along the sequence, or in the 3D View pane as the 3D configuration at various levels of detail.


            <h2 class="page-subtitle">How to use cgDNAweb</h2>

	    <p>Fill in a DNA sequence in the input form in the header at the top of page (try starting by typing a 10-20 bp long fragment, or you can copy paste much longer sequences; up to 1Kbp or so are feasible on a contemporary laptop). Hard limits for the website to function, are that the input sequences need to be at least two basepairs long and less than 3K bp.  The input format is either a string of nucleotides from the {A,C,G,T} alphabet, (upper or lower case, which can be mixed, and with or without spaces), e.g 'A atCG c' or, for tandem repeats, a sequence between parentheses, and a number after an underscore, e.g. A_12 for poly(A) of length 12 or (AG)_100 for a poly(AG) molecule with 200 basepairs. Initially we recommend using only the default setting for the PS4 paramset which we regard as the current state of the art.            

	    <p>The input characters are all considered to be ASCII, and in principle carriage returns, newlines, spaces, and tabs may be included in the input and are all ignored.
		Attention to copy pasting from PDF documents where other hidden characters may be included and cause rejection of the input. The border of the input form turns red when the input is rejected, either because of length constraints, unrecognised characters or unmatched parentheses. 
	    <p>Click Go, and inspect the Output in either the 3D View or 2D Plots panes.

	    <p>cgDNAweb can visualise superpositions of ground states for up to four different cases simultaneously, e.g. ground states of different sequences with the same parameter set can be compared, or differences for the same sequence with different parameter sets can be compared.
	To make multiple sequence inputs, use the arrow keys to switch to another input form, or click one of the white dots. A maximum of four sequences can be visualized at one time, but each of the four sequences can be modified and re-plotted individually.
             Specific base pair frames of different sequences will be aligned in the 3D viewer whenever a particular nucleotide is wrapped in square brackets in the input sequence, e.g. A_6 [T] A_6.
              In this case, the viewer will have the basepair with T at the center of the view. Note that there can be at most one set of brackets [ ] per sequence, therefore it is not possible to use this syntax within tandem repeats. No explicit [ ] in the input sequence defaults to the first base pair frame being taken for centering.

	    <p> Strong and nonlocal sequence-dependence of the ground state shape are easily observed, especially in the 2D Plots pane.             
            For example try comparing the four 19 bp fragments  A_9 A [A] A_8, A_9 T [A] A_8, 
A_9 C [A] A_8,  and A_9 G [A] A_8. Note also, that even for the uniform poly(A) sequence A_9 A [A] A_8 = A_19 (where the first input format allows centering of the 3D view on the 11th base pair) the local ground state configuration is (as it should be) different between the interior and close to the ends.




	    <p> Strong intrinsic bends arise for some sequences, e.g. with phased A-tracts such as

			<div style="text-align:center">(a_5 g_5 t_5 c_5 g)_2 a_5 g_5 t_5 c_5 [g](a_5 g_5 t_5 c_5 g)_2</div>

	    <p> And the sometimes significant consequences of reconstructing the same sequence with parameter sets fit to MD simulations with different protocols can be observed by comparing reconstructions of this single sequence with two different paramsets, e.g. PS2 and PS4.


            <h1 class="page-title">Some documentation</h1>
	    <p>Given the input sequence, and a selected parameter set from the dropdown menu next to the sequence input, you can view the ground state of the DNA in the '3D View' tab or in the '2D Plots' tab. Once a sequence or sequences have been entered, the arrow on the right of the darker blue navigation bar can be used to show or hide the the header panel for more or less viewing space.

            <h2 class="page-subtitle">Viewer controls</h2>
            The controls for the 3D viewer are mainly mouse-based:
            <dl>
                <dt><b>Rotate</b></dt>
                <dd>left click and drag, or single finger drag on mobile.</dd>
                <dt><b>Zoom</b></dt>
                <dd>middle mouse click, scroll, or pinch on mobile.</dd>
                <dt><b>Pan</b></dt>
                <dd>shift+left click and drag, or triple finger drag on mobile.</dd>
                <dt><b>Context menu</b></dt>
                <dd>Accessed by right click or command+click on macOS, the viewer context menu gives access to:<dl>
                    <dt><b>Center on this base</b></dt>
                    <dd>Rotates and translates the DNA such that the base frame of the selected base coincides with the origin.</dd>
                    <dt><b>Center on this base pair</b></dt>
                    <dd>Rotates and translates the DNA such that the base pair frame of the selected base coincides with the origin.</dd>
                    <dt><b>Look at center/origin</b></dt>
                    <dd>Rotates the camera such that the origin is centred in the viewport.</dd>
                    </dl>
		</dd>
            </dl>

	    <p> The drop down menu to the right of the 3D view pane provides various viewing options. The cgDNA model assumes rigid bases, and each base can be visualised as its individual (heavy) atoms, or as a (red) frame (i.e. an origin and three orthonormal vectors embedded in the base according to Curves+ conventions), or as a box surrounding the base atoms, colour coded for sequence.
            Similarly the base pair, which is an appropriate average of the two associated rigid bases, can be visualized as either a (grey) frame or a surrounding bicolour box. When each base is selected with the mouse an inset window reports the strand location and composition of each base. 

The 3D view is centred on the basepair frame selected by [ ] in the input sequence, and this frame is highlighted by a larger RGB frame. The backbones are simple numerical interpolations of the base frame positions.
            <p>  Sufficently long sequences eventually become unwieldy to manipulate interactively in the 3D viewer particularly when visualizing individual atoms. However long scale, large overall nontrivial shapes in sequences of up to 1Kbp are easily observed, for example in the presence of phased A-tracts.

            <h2 class="page-subtitle">2D plots pane</h2>
            <p> In this panel the ground state values of the twelve Curves+ helicoidal internal coordinates (6 inter base-pair, or junction, coordinates and 6 intra base-pair coordinates, each with three translation and three rotational degrees of freedom) plotted along each input sequence.
            Translational coordinates are reported in Ångströms with rotational coordinates (or components of the rotational Cayley vector) reported either in degrees or in cgDNA internal units of 1/5 radians or approximately 11 degrees.
           (This nonstandard rotational unit gives a good scaling between rotational and translational stiffnesses of DNA.) Placing the cursor over one of the plots returns the numerical values in the plot along with the local sequence context. For very long sequences the 2D plots become less useful.

            <h2 class="page-subtitle">Parameter sets</h2>
            <p> Parameters in the cgDNA model are estimated from large scale libraries of Molecular Dynamics (or MD) simulations. Differences in libraries can reflect different solvent conditions, such as temperature and ion species and concentration, or different MD simulation force fields and protocols, or different libraries of sequences in the training set. There are also differences in the choice of objective function and procedures for fitting cgDNA model parameters  to given MD training set simulation data. All of the issues are discussed at length in the citations below. The four paramsets currently accessible through the cgDNAweb page can be briefly described as follows:
            <ul>
                <li> <b>Parameter set 1</b> <ul>
                    <li>ABC sequence library</li>
                    <li>100 nanoseconds of Amber MD time series</li>
                    <li>bsc0 force field</li>
                    <li>150mM of K+ counter-ions</li>
                    <li>Relative entropy truncation</li>
                    <li>Fitting functional: Kullback-Leibler divergence with model pdf in first argument.</li>
                    <li>Mononucleotide/dinucleotide model</li>
                </ul></li>
                <li> <b>Parameter set 2</b> <ul>
                    <li>ABC sequence library</li>
                    <li>1 microsecond of Amber MD time series</li>
                    <li>bsc0 force field</li>
                    <li>150mM of K+ counter-ions</li>
                    <li>Maximum entropy/likelihood truncation</li>
                    <li>Fitting functional: Kullback-Leibler divergence with model pdf in first argument.</li>
                    <li>Mononucleotide/dinucleotide model</li>
                </ul></li>
                <li> <b>Parameter set 3</b> <ul>
                    <li>Palindromic sequence library</li>
                    <li>3 microseconds of Amber MD time series</li>
                    <li>bsc1 force field</li>
                    <li>150mM of K+ counter-ions</li>
                    <li>Maximum entropy/likelihood truncation</li>
                    <li>Fitting functional: Kullback-Leibler divergence with model pdf in first argument.</li>
                    <li>Mononucleotide/dinucleotide model</li>
                </ul></li>
                <li> <b>Parameter set 4 (recommended)</b><ul>
                    <li>Palindromic sequence library</li>
                    <li>3 microseconds of Amber MD time series</li>
                    <li>bsc1 force field</li>
                    <li>150mM of K+ counter-ions</li>
                    <li>Maximum entropy/likelihood truncation</li>
                    <li>Fitting functional: Kullback-Leibler divergence with model pdf in second argument.</li>
                    <li>Dinucleotide model with specific blocks for the dimers at the ends.</li>
                </ul></li>
            </ul>
           
            <p> If in doubt, use parameter set 4 i.e. PS4.

            <h2 class="page-subtitle">Export pane</h2>
            <p> It is possible to export the configuration and other data in multiple ways, by selecting an entry in the 'Export' menu. 

            <dl>
                <dt><b>Atom coordinates as .pdb</b></dt>
                <dd>This will download a .pdb format file with all of the heavy atoms in the DNA bases. These atoms have positions as specified by the Tsukuba convention. The phosphodiesther backbones are not provided. Note that, due to the available character length in the PDB format specification for atom coordinates, the output generated directly here for long DNA molecules may be incorrect. Up to 300bp or so in length is a conservative estimate below which no problem wil arise. Absolute coordinates of base and basepair frame origins are still available for longer length molecules in the .fra output format. And from .fra output absolute PDB coordinates of each atom can be computed locally by suitably modifying the available <a href="http://lcvmwww.epfl.ch/research/cgDNA/">cgDNA scripts.</a></dd>
                <br>
                <dt><b>Frames as .fra file</b></dt>
                <dd>This will download a Curves+ .fra format file describing the configuration of coordinate frames in the molecule. The file contains one line per frame and each line contains the following columns: &lt;no of strand&gt; &lt;no of basepair&gt; &lt;d1_1&gt; &lt;d1_2&gt; &lt;d1_3&gt; &lt;d2_1&gt; &lt;d2_2&gt; &lt;d2_3&gt; &lt;d3_1&gt; &lt;d3_2&gt; &lt;d3_3&gt; &lt;r_1&gt; &lt;r_2&gt; &lt;r_3&gt; where the triples d1,d2,d3 are the (absolute, or laboratory, nondimensional) coordinates of the three vectors making up each orthonormal frame, and r is the (absolute) position of the frame (in Angstroms). </dd>
                <br>
                <dt><b>Basepair frames as .fra file</b></dt>
		<dd> The same as above, but for the base-pair frames. </dd>
                <br>
                <dt><b>Shapes as .svg</b></dt>
                <dd>Downloads a zipped graphics file with all the plots of the internal coordinates as they are shown in the '2D Plots' tab, but without the interactivity.</dd>
                <br>
                <dt><b>Shapes as .txt</b></dt>
		<dd>Downloads the internal configuration of the molecule as it appears in the cgDNA model. That is, a column vector containing (x_1, y_1, x_2, ..., y_{n-1}, x_n), where both the x_i and y_i are real 6-vectors, and x_i contains the 6 intra coordinates, and y_i the 6 inter coordinates, with translations in Angstrom, and the rotations in rad/5.</dd>
                <br>
                <dt><b>Stiffness matrix in CSC format, stored in JSON</b></dt>
                <dd>This will download a zipped file with all the stiffness matrices of the input sequences in compressed sparse column format in a JSON file. This can be used by <a href="https://docs.scipy.org/doc/scipy/reference/generated/scipy.sparse.csc_matrix.html">SciPy</a> by also using the <a href="https://docs.python.org/2/library/json.html">built in JSON decoder</a>.</dd>
            </dl>


	    <!-- <p> The cgDNA model is itself implemented as simple Matlab/Octave code which provides the parameters for a Gaussian PDF which can then be used for example as the input for a Monte Carlo simulation code such as <a href="http://lcvmwww.epfl.ch/research/cgDNA/downloads.php">cgDNAmc</a>. By downloading  a .txt ground state shape and associated .csc/.json (sparse banded) stiffness matrix the user can access the parameters in the cgDNA predicted Gaussian PDF for that particular sequence directly from the cgDNAweb page without having to install and use the analogous cgDNA Matlab/Octave scripts. -->

            <p> There are currently some issues with the download functions under the Safari web browser, so we recommend using Firefox or Chrome to access this functionality.

            <h2 class="page-subtitle">Stiffness Matrices</h2>
	    <p> The cgDNA model predicts both a ground state configuration and a banded stiffness matrix for each input sequence. However cgDNAweb focuses on visualising the ground state shape in various ways, and only provides the stiffness matrix via download of a file with its numerical entries. This data may then be post-processed as wished. One possibility is to make plots of the eigenvalues of the stiffness matrix, as indicated in the figure below
(in the scaling with translation variables in Angstroms and rotations in 1/5th radians). Another is to download and use the .txt ground state shape and associated .csc/.json stiffness matrix as inputs to a Monte Carlo simulation code (such as <a href="http://lcvmwww.epfl.ch/research/cgDNA/downloads.php">cgDNAmc</a>) for sampling the cgDNA Gaussian PDF in order to compute various expectations of interest, e.g. sequence-dependent persistence lengths as described in [6]. However, for extensive post-processing simulations it is probably more efficient to install and use the available cgDNA Matlab/Octave scripts directly rather than using the cgDNAweb interface.

<img src="stiffness_spectra-02-no_inset_labels-ps4.png" alt="Stiffness spectra" style="display: block; margin-left: auto; margin-right: auto; width: 50%;">
<p><b>Figure</b> The <i>cgDNA</i> stiffness matrix for a sequence of length <i>N</i> has 12<i>N</i>-6 positive eigenvalues, all real and positive,  which can be sorted in ascending order and plotted against their index (scaled to always lie in [0,1] to facilitate comparison of spectra for sequences of different lengths). Spectra are here compared for four sequences <tt>A_300</tt> (blue), <tt>(AT)_150</tt> (green), the Widom 601 positioning sequence (see article, purple) and the A-tract sequence <tt>(A_5 G_5 T_5 C_5 T)_15</tt> (red). The inset in the top left is a magnification of the lower part of the spectra.</p>

            <h2 class="page-subtitle">Relevant citations</h2>

	    <p>[1] <b>cgDNAweb: a web interface to the cgDNA sequence-dependent coarse-grain model of double-stranded DNA.</b><br>
		L. De Bruin, J.H. Maddocks <br>
		Nucleic Acids Research 46, issue W1 (2018), p. W5-W10<br>
		DOI:<a href="https://doi.org/10.1093/nar/gky351">10.1093/nar/gky351</a><br>
		</p>

            <p>[2] <b>A sequence-dependent rigid-base model of DNA</b><br>
                O. Gonzalez, D. Petkevičiūtė, J.H. Maddocks<br>
                Journal of Chemical Physics 138, no. 5 (2013), p. 055122 1-28<br>
                DOI:<a href="https://doi.org/10.1063/1.4789411">10.1063/1.4789411</a><br>
                </p>

            <p>[3] <b>cgDNA: a software package for the prediction of sequence-dependent coarse-grain free energies of B-form DNA</b><br>
                D. Petkevičiūtė, M. Pasi, O. Gonzalez, J.H. Maddocks <br>
                Nucleic Acids Research 42, no. 20 (2014), p. e153 <br>
                DOI:<a href="https://doi.org/10.1093/nar/gku825">10.1093/nar/gku825</a><br>
                </p>

            <p>[4] <b>μABC: a systematic microsecond molecular dynamics study of tetranucleotide sequence effects in B-DNA</b><br>
                M. Pasi, J.H. Maddocks, D. Beveridge, T.C. Bishop, D.A. Case, T. Cheatham III, P.D. Dans, B. Jayaram, F. Lankas, C. Laughton, J. Mitchell, R. Osman, M. Orozco, A. Pérez, D. Petkevičiūtė, N. Spackova, J. Sponer, K. Zakrzewska, R. Lavery <br>
                Nucleic Acids Research 42, no. 19 (2014), p. 12272–12283 <br>
                DOI:<a href="https://doi.org/10.1093/nar/gku855">10.1093/nar/gku855</a><br>
                </p>
        
            <p>[5] <b>Absolute versus relative entropy parameter estimation in a coarse-grain model of DNA</b><br>
                O. Gonzalez, M. Pasi, D. Petkevičiūtė, J. Glowacki, J.H. Maddocks <br>
                Multiscale Modeling and Simulation 15, no. 3 (2017), p. 1073 - 1107 <br>
                DOI:<a href="https://doi.org/10.1137/16M1086091">10.1137/16M1086091</a><br>
                </p>

	    <p>[6] <b>Sequence-Dependent Persistence Lengths of DNA</b><br>
               J.S. Mitchell, J. Glowacki, A.E. Grandchamp, R.S. Manning, J.H. Maddocks <br>
               Journal of Chemical Theory and Computation 13 (2017), p. 1539-1555 <br>
               DOI:<a href="https://doi.org/10.1021/acs.jctc.6b00904">10.1021/acs.jctc.6b00904</a><br>
               </p>

            <h2 class="page-subtitle">Browser support</h2>
            <p>This website has been tested and works on Chrome (v. 58), Firefox (v. 54) and Safari (v. 9.1.2), on macOS version up to 10.12 (Sierra). Other browsers may not have full functionality. In particular Internet Explorer 8 and 9 are not supported. </p>
	    <p>The 3D viewing pane of cgDNAweb does not function on the Safari browser on macOS 10.13 (High Sierra) perhaps due to documented issues with the WebGL library. Chrome and Firefox do run cgDNAweb satisfactory on the same version of macOS.</p>

            <h2 class="page-subtitle">Resources used</h2>
            <p>This website used <a href="https://threejs.org/">three.js</a> for visualisation of DNA. Plots are generated with the help of <a href="https://d3js.org/">d3.js</a>. Symbols shown are from <a href="http://fontawesome.io/">Font Awesome</a>. Zips are generated with <a href="https://gildas-lormeau.github.io/zip.js/">zip.js</a>. Files are saved with <a href="https://github.com/eligrey/FileSaver.js/">FileSaver.js.</a> Linear algebra calculations done with <a href="http://www.numericjs.com/">numeric.js.</a></p> 
        </div>

    </div>

    <!-- ===================================== -->
    <!-- POPUPS                                -->
    <!-- ===================================== -->

    <!-- CONTEXTMENU -->
    <div id="contextdiv">
        <div class="cmenu-item"><a id="center_base"><i class="fa fa-align-center fa-fw" aria-hidden="true"></i>Center on this base</a></div>
        <div class="cmenu-item"><a id="center_bp"><i class="fa fa-align-justify fa-fw" aria-hidden="true"></i>Center on this basepair</a></div>
        <div class="cmenu-item"><a id="view_origin"><i class="fa fa-eye fa-fw" aria-hidden="true"></i>Look at center/origin</a></div>
        <!--<label class="cmenu-item" for="radio_plots"><a id="goto_plots"><i class="fa fa-line-chart fa-fw" aria-hidden="true"></i>Check shapes</a></label>-->
        <!--<label class="cmenu-item" for="radio_about"><a id="goto_about"><i class="fa fa-info fa-fw" aria-hidden="true"></i>About</a></label>-->
    </div>


    <!-- INFO ABOUT DNA BASES -->
    <div id="dna-info-popup" class="input-info-popup arrow_box">
        <div>sequence #: <span id="dna_info_seq_no"></span></div>
        <div>basepair #: <span id="dna_info_bp_no"></span></div>
        <div>nucleotide: <span id="dna_info_nuc"></span></div>
        <div>DNA strand: <span id="dna_info_strand"></span></div>
    </div>
